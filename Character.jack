class Character {
	// Location on the screen
	field int x, y;
	
	// The radius of the circle
	field int radius;
	field inst smallRadius;
	field int stepSize;
	field int blink_counter;

	constructor Character new(int Ax, int Ay, int Aradius, int Bradius) {
		let radius = Aradius;
		let smallRadius = Bradius;
		let stepSize = 5;
		let blink_counter = 0;

		let x = Ax;
		let y = Ay - (2*radius);

		do draw(0);
		return this;
	}	

	method int getX() {
		return x;
	}

	method int getY() {
		return y;
	}

	method int getRad() {
		return radius;
	}

	method void dispose() {
		do Memory.deAlloc(this);
		return;
	}

	method void draw(int eyes) {

		do Screen.setColor(true);
		do Screen.drawCircle(x+radius,y-smallRadius,smallRadius);
		do Screen.drawCircle(x+radius,y+radius,radius);
		do Screen.setColor(false);
		do Screen.drawCircle(x+radius-4,y+radius,3);
		do Screen.drawCircle(x+radius+4,y+radius,3);
		if(eyes = 0)
		{
		  do Screen.setColor(true);
		  do Screen.drawCircle(x+radius-4,y+radius,1);
		  do Screen.drawCircle(x+radius+4,y+radius,1);
		}
		if(eyes = 1)
		{
		  do Screen.setColor(true);
		  do Screen.drawCircle(x+radius-3,y+radius,1);
		  do Screen.drawCircle(x+radius+5,y+radius,1);
		}
    if(eyes = 2)
		{
		  do Screen.setColor(true);
		  do Screen.drawCircle(x+radius-5,y+radius,1);
		  do Screen.drawCircle(x+radius+3,y+radius,1);
		}
		if(eyes = 3)
		{
		  do Screen.setColor(true);
		  do Screen.drawCircle(x+radius-4,y+radius+1,1);
		  do Screen.drawCircle(x+radius+4,y+radius+1,1);
		}
		if(eyes = 4)
		{
		  do Screen.setColor(true);
		  do Screen.drawCircle(x+radius-4,y+radius-1,1);
		  do Screen.drawCircle(x+radius+4,y+radius-1,1);
		}
		if(eyes = 5)
		{
		  let eyes = Random.between(0,4);
      do draw(eyes);
		}

		return;
	}
	
	method void blink() {
    if(blink_counter = 10)
    {
		  do Screen.setColor(true);
		  do Screen.drawCircle(x+radius,y-smallRadius,smallRadius);
		  do Screen.drawCircle(x+radius,y+radius,radius);
		  let blink_counter = -1;
		}
		else 
		{
		 if(blink_counter = 0)
		 {
		   do draw(0);
		 }
		}
		let blink_counter = blink_counter + 1;
		return;
	}
	

	method void erase() {
		do Screen.setColor(false);
		do Screen.drawCircle(x+radius,y+radius,radius);
		do Screen.drawCircle(x+radius,y-smallRadius,smallRadius);
		return;
	}

	method void moveLeft() {
		if(x > 1) {
			do erase();
			let x = x - stepSize;
			do draw(2);
		}
		return;
	}

	method void moveRight() {
		if((x + radius + radius) < 510) {
			do erase();
			let x = x + stepSize;
			do draw(1);
		}
		return;
	}

	method void moveUp() {
		if(y > 1) {
			do erase();
			let y = y - stepSize;
			do draw(3);
		}
		return;
	}

	// TODO: add collision detection for platforms
	method void moveDown() {
		if((y + radius + radius) < 510) {
			do erase();
			let y = y + stepSize;
			do draw(3);
		}
		return;
	}



}
	
